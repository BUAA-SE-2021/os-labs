<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>OS Pintos Labs</title><link>https://buaa-se-2021.github.io/os-labs/docs/table-of-contents/</link><description>Recent content on OS Pintos Labs</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://buaa-se-2021.github.io/os-labs/docs/table-of-contents/index.xml" rel="self" type="application/rss+xml"/><item><title>Problem Set 0</title><link>https://buaa-se-2021.github.io/os-labs/docs/table-of-contents/ps0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://buaa-se-2021.github.io/os-labs/docs/table-of-contents/ps0/</guid><description>Problem Set 0 # 实验说明 # 单人完成，代码要求每人一份（只需提交两个 *.c文件）。除代码外，还需要提交文档。内容可为设计和需求说明、解决思路等，无文档模板，自由发挥。 对于每个人而言，请仅提交一个 PDF 文件（如果有多个文档，请合并成一个。推荐把所有内容写在一个 Markdown/LaTex 项目里）。由组长将每个人的代码文件和 PDF 文档收齐后，将每个人的提交内容放在各自的文件夹后打包为 Zip 包提交。 本次实验因为不涉及多人合作，故对 Git 的使用没有要求。此后的 Project 1 开始，会对小组使用 Git 的情况进行考察。 本实验需要利用操作系统的同步机制，实现问题中要求的逻辑功能。 实验代码可在官网中自行下载，无需 Pintos 环境即可直接运行。 实验内容 # Problem 1：自动化车站 乘客行为：到站台等车、车来则上车 火车行为：到站装载乘客，无人等待或车已满就开走 让乘客和火车的行为流畅运行，以实现车站的自动化管理 Problem 2：氢原子与氧原子结合，生成 H2O 2 个 H 和 1 个 O 生成水分子 如何保证 H2O 结构正常生成，不会遗漏或多加原子 Problem 1 # 需求 # CalTrain 程序想让你通过自动化列车和乘客管理来提高效率。每名乘客和每列火车都由一个线程控制。 要求编写同步函数，以确保列车的有序装载。避免出现多人上车座位不够的情况。</description></item><item><title>Project 1</title><link>https://buaa-se-2021.github.io/os-labs/docs/table-of-contents/p1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://buaa-se-2021.github.io/os-labs/docs/table-of-contents/p1/</guid><description>Project 1: Threads # 需要提交代码和文档。代码即为包含了 pintos/src 的源代码，文档是在本网站 Resources 区“实验文档模板”和“Project 1 DesignDoc 模板”的整合。请将其整合导出为一个 PDF 文件，命名为 p1-组长学号-组长姓名.pdf ，并与代码文件打包为 Zip，提交至云平台。
提交的目录结构为：
p1-组长学号-组长姓名 ├── pintos ├── src ...... ├── p1-组长学号-组长姓名.pdf 本次实验的 DDL 是 2021 年 11 月 11 日晚 23 时。
Pintos 结构图 # Pintos 结构图如上所示，其操作系统内核主要分为进程管理、内存管理、文件系统、设备驱动程序等四个部分。本次实验所涉及到的主要是进程管理的部分，同学们需要根据需求实现特定的进程调度方案。
实验背景知识 # Pintos 目录结构 # 本节将主要给大家介绍 Pintos 中比较重要的几个文件夹。
在整个 Pintos 实验课中，我们要修改的代码都在 src 目录下。Project 1 的实验中，我们所要修改的文件主要集中在 src/threads 和 src/devices 这两个目录中，由于具体实现方式不同，有的同学也会有可能修改到少量其他目录中的文件。
. ├── devices ├── examples ├── filesys ├── lib ├── LICENSE ├── Make.</description></item></channel></rss>